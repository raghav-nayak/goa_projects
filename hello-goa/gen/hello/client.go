// Code generated by goa v3.21.1, DO NOT EDIT.
//
// hello client
//
// Command:
// $ goa gen hello/design

package hello

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "hello" service client.
type Client struct {
	GreetHelloEndpoint     goa.Endpoint
	RespondToHelloEndpoint goa.Endpoint
}

// NewClient initializes a "hello" service client given the endpoints.
func NewClient(greetHello, respondToHello goa.Endpoint) *Client {
	return &Client{
		GreetHelloEndpoint:     greetHello,
		RespondToHelloEndpoint: respondToHello,
	}
}

// GreetHello calls the "greetHello" endpoint of the "hello" service.
func (c *Client) GreetHello(ctx context.Context, p string) (res string, err error) {
	var ires any
	ires, err = c.GreetHelloEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// RespondToHello calls the "respondToHello" endpoint of the "hello" service.
func (c *Client) RespondToHello(ctx context.Context, p string) (res string, err error) {
	var ires any
	ires, err = c.RespondToHelloEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}
