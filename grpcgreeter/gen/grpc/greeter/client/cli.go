// Code generated by goa v3.21.1, DO NOT EDIT.
//
// greeter gRPC client CLI support package
//
// Command:
// $ goa gen grpcgreeter/design

package client

import (
	"encoding/json"
	"fmt"
	greeter "grpcgreeter/gen/greeter"
	greeterpb "grpcgreeter/gen/grpc/greeter/pb"
)

// BuildSayHelloPayload builds the payload for the greeter SayHello endpoint
// from CLI flags.
func BuildSayHelloPayload(greeterSayHelloMessage string) (*greeter.SayHelloPayload, error) {
	var err error
	var message greeterpb.SayHelloRequest
	{
		if greeterSayHelloMessage != "" {
			err = json.Unmarshal([]byte(greeterSayHelloMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"name\": \"Amex\"\n   }'")
			}
		}
	}
	v := &greeter.SayHelloPayload{
		Name: message.Name,
	}

	return v, nil
}
