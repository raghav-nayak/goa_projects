// Code generated by goa v3.21.1, DO NOT EDIT.
//
// greeter gRPC client
//
// Command:
// $ goa gen grpcgreeter/design

package client

import (
	"context"
	greeterpb "grpcgreeter/gen/grpc/greeter/pb"

	goagrpc "goa.design/goa/v3/grpc"
	goa "goa.design/goa/v3/pkg"
	"google.golang.org/grpc"
)

// Client lists the service endpoint gRPC clients.
type Client struct {
	grpccli greeterpb.GreeterClient
	opts    []grpc.CallOption
}

// NewClient instantiates gRPC client for all the greeter service servers.
func NewClient(cc *grpc.ClientConn, opts ...grpc.CallOption) *Client {
	return &Client{
		grpccli: greeterpb.NewGreeterClient(cc),
		opts:    opts,
	}
}

// SayHello calls the "SayHello" function in greeterpb.GreeterClient interface.
func (c *Client) SayHello() goa.Endpoint {
	return func(ctx context.Context, v any) (any, error) {
		inv := goagrpc.NewInvoker(
			BuildSayHelloFunc(c.grpccli, c.opts...),
			EncodeSayHelloRequest,
			DecodeSayHelloResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			return nil, goa.Fault("%s", err.Error())
		}
		return res, nil
	}
}
