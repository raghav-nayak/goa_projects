// Code generated by goa v3.21.1, DO NOT EDIT.
//
// greeter gRPC server types
//
// Command:
// $ goa gen grpcgreeter/design

package server

import (
	greeter "grpcgreeter/gen/greeter"
	greeterpb "grpcgreeter/gen/grpc/greeter/pb"
	"unicode/utf8"

	goa "goa.design/goa/v3/pkg"
)

// NewSayHelloPayload builds the payload of the "SayHello" endpoint of the
// "greeter" service from the gRPC request type.
func NewSayHelloPayload(message *greeterpb.SayHelloRequest) *greeter.SayHelloPayload {
	v := &greeter.SayHelloPayload{
		Name: message.Name,
	}
	return v
}

// NewProtoSayHelloResponse builds the gRPC response type from the result of
// the "SayHello" endpoint of the "greeter" service.
func NewProtoSayHelloResponse(result *greeter.SayHelloResult) *greeterpb.SayHelloResponse {
	message := &greeterpb.SayHelloResponse{
		Greeting: result.Greeting,
	}
	return message
}

// ValidateSayHelloRequest runs the validations defined on SayHelloRequest.
func ValidateSayHelloRequest(message *greeterpb.SayHelloRequest) (err error) {
	if utf8.RuneCountInString(message.Name) < 1 {
		err = goa.MergeErrors(err, goa.InvalidLengthError("message.name", message.Name, utf8.RuneCountInString(message.Name), 1, true))
	}
	return
}
