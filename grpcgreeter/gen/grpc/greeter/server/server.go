// Code generated by goa v3.21.1, DO NOT EDIT.
//
// greeter gRPC server
//
// Command:
// $ goa gen grpcgreeter/design

package server

import (
	"context"
	greeter "grpcgreeter/gen/greeter"
	greeterpb "grpcgreeter/gen/grpc/greeter/pb"

	goagrpc "goa.design/goa/v3/grpc"
	goa "goa.design/goa/v3/pkg"
)

// Server implements the greeterpb.GreeterServer interface.
type Server struct {
	SayHelloH goagrpc.UnaryHandler
	greeterpb.UnimplementedGreeterServer
}

// New instantiates the server struct with the greeter service endpoints.
func New(e *greeter.Endpoints, uh goagrpc.UnaryHandler) *Server {
	return &Server{
		SayHelloH: NewSayHelloHandler(e.SayHello, uh),
	}
}

// NewSayHelloHandler creates a gRPC handler which serves the "greeter" service
// "SayHello" endpoint.
func NewSayHelloHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, DecodeSayHelloRequest, EncodeSayHelloResponse)
	}
	return h
}

// SayHello implements the "SayHello" method in greeterpb.GreeterServer
// interface.
func (s *Server) SayHello(ctx context.Context, message *greeterpb.SayHelloRequest) (*greeterpb.SayHelloResponse, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "SayHello")
	ctx = context.WithValue(ctx, goa.ServiceKey, "greeter")
	resp, err := s.SayHelloH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*greeterpb.SayHelloResponse), nil
}
